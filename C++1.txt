2018/1/27  C++笔记整理
1.程序的编译过程：创建一个源文件（source file），由程序文本构成；编译器（complier）将源文件转化为
含有机器语言指令的目标文件（.o）,目标文件一起可以被链接器生成一个可以在系统中运行的可执行文件（.exe）。

2.库（library）是提前编写的能执行有用操作的工具的集合。调用时，系统库用尖括号<>表示，
如#include <iostream>，而其他典型库文件以.h后缀结尾，并用一对引号“”代替尖括号。

3.C++中，仅仅读取使用#include所包含的相应头文件还不足以访问系统库，为确保定义在一个大系统库中各部分
的程序元素名字（变量名，函数名）不会相互混淆，C++将代码段切分成不同的命名空间来跟踪结构体中名字
，C++标准库命名空间为std，"using namespace std;"

4.函数原型（prototype）使得在函数实际定义之前调用该函数成为可能，其实就是函数声明。
主要目的是确定函数类型和参数数量，以便编译器判断函数调用是否与函数定义兼容。

5.每个C++都要有一个main主函数，指定了程序计算的开始点，程序开始运行则main函数被调用，main函数
结束工作并返回时，程序执行随之结束。

6.main函数中参数argc和argv含义及用法 ：
argc是argument count的缩写，表示传入main函数参数的个数
argv是argument vector的缩写，表示传入main函数的参数序列或指针，并且第一个参数argv[0]是
程序的名称，并包含了程序所在的完整路径，所以我们需要输入main函数的参数个数应该是argc-1，
#include <iostream>  
using namespace std;  
void main(int argc,char *argv[])  
{  
    for(int i=0;i<argc;i++)  
    {  
        cout<<"argument["<<i<<"] is: "<<argv[i]<<endl;  
    }  
    system("pause");  
}  
main函数的第二个参数“char *argv[]“也可以替换为 “char **argv“，两者是等价的，
在没有参数传入的情况下，保存程序名称的第一个变量argv[0]依然存在。
传参数给main函数有两种方法，第一种方式是在编译环境中设置，以vs2012为例，右击项目—>属性—>配置属性—>调试—>命令参数，
在命令参数中输入，每个参数之间用空格隔开，之后点击确定并应用。
第二种方式也是经常会用到的方式是通过命令提示符传入。首先需要打开命令提示符窗口，点击开始菜单在“搜索程序和文件”里输入
命令“cmd”或者直接按快捷键 Windows+R，在弹出的对话框里输入“cmd”即可打开命令提示符窗口，打开命令提示符窗口后需要输入
生成的exe文件所在的完整路径，之后输入传入参数，以空格分隔，之后回车，就会显示出argument[k]，其中k从0开始。
最后说明一下：一般编译器默认使用argc和argv两个名称作为main函数的参数，但这两个参数如此命名并不是必须的，
可以使用任何符合C++语言命名规范的变量名作为入参，效果是一样的。
